// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pbft/pbft.proto

package pbft

import (
	fmt "fmt"
	math "math"

	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Envelope for possible communicated messages.
type Message struct {
	// Types that are valid to be assigned to Payload:
	//	*Message_PrePrepare
	//	*Message_Prepare
	//	*Message_Commit
	//	*Message_Checkpoint
	//	*Message_ViewChange
	//	*Message_NewView
	Payload              isMessage_Payload `protobuf_oneof:"payload"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Message) Reset()         { *m = Message{} }
func (m *Message) String() string { return proto.CompactTextString(m) }
func (*Message) ProtoMessage()    {}
func (*Message) Descriptor() ([]byte, []int) {
	return fileDescriptor_01e062d44865490c, []int{0}
}

func (m *Message) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Message.Unmarshal(m, b)
}
func (m *Message) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Message.Marshal(b, m, deterministic)
}
func (m *Message) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Message.Merge(m, src)
}
func (m *Message) XXX_Size() int {
	return xxx_messageInfo_Message.Size(m)
}
func (m *Message) XXX_DiscardUnknown() {
	xxx_messageInfo_Message.DiscardUnknown(m)
}

var xxx_messageInfo_Message proto.InternalMessageInfo

type isMessage_Payload interface {
	isMessage_Payload()
}

type Message_PrePrepare struct {
	PrePrepare *PrePrepare `protobuf:"bytes,1,opt,name=pre_prepare,json=prePrepare,proto3,oneof"`
}

type Message_Prepare struct {
	Prepare *Prepare `protobuf:"bytes,2,opt,name=prepare,proto3,oneof"`
}

type Message_Commit struct {
	Commit *Commit `protobuf:"bytes,3,opt,name=commit,proto3,oneof"`
}

type Message_Checkpoint struct {
	Checkpoint *Checkpoint `protobuf:"bytes,4,opt,name=checkpoint,proto3,oneof"`
}

type Message_ViewChange struct {
	ViewChange *ViewChange `protobuf:"bytes,5,opt,name=view_change,json=viewChange,proto3,oneof"`
}

type Message_NewView struct {
	NewView *NewView `protobuf:"bytes,6,opt,name=new_view,json=newView,proto3,oneof"`
}

func (*Message_PrePrepare) isMessage_Payload() {}

func (*Message_Prepare) isMessage_Payload() {}

func (*Message_Commit) isMessage_Payload() {}

func (*Message_Checkpoint) isMessage_Payload() {}

func (*Message_ViewChange) isMessage_Payload() {}

func (*Message_NewView) isMessage_Payload() {}

func (m *Message) GetPayload() isMessage_Payload {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (m *Message) GetPrePrepare() *PrePrepare {
	if x, ok := m.GetPayload().(*Message_PrePrepare); ok {
		return x.PrePrepare
	}
	return nil
}

func (m *Message) GetPrepare() *Prepare {
	if x, ok := m.GetPayload().(*Message_Prepare); ok {
		return x.Prepare
	}
	return nil
}

func (m *Message) GetCommit() *Commit {
	if x, ok := m.GetPayload().(*Message_Commit); ok {
		return x.Commit
	}
	return nil
}

func (m *Message) GetCheckpoint() *Checkpoint {
	if x, ok := m.GetPayload().(*Message_Checkpoint); ok {
		return x.Checkpoint
	}
	return nil
}

func (m *Message) GetViewChange() *ViewChange {
	if x, ok := m.GetPayload().(*Message_ViewChange); ok {
		return x.ViewChange
	}
	return nil
}

func (m *Message) GetNewView() *NewView {
	if x, ok := m.GetPayload().(*Message_NewView); ok {
		return x.NewView
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*Message) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*Message_PrePrepare)(nil),
		(*Message_Prepare)(nil),
		(*Message_Commit)(nil),
		(*Message_Checkpoint)(nil),
		(*Message_ViewChange)(nil),
		(*Message_NewView)(nil),
	}
}

// --- Request from client ---
type Request struct {
	Timestamp            *timestamp.Timestamp `protobuf:"bytes,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Payload              string               `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
	ReplicaId            uint64               `protobuf:"varint,3,opt,name=replica_id,json=replicaId,proto3" json:"replica_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Request) Reset()         { *m = Request{} }
func (m *Request) String() string { return proto.CompactTextString(m) }
func (*Request) ProtoMessage()    {}
func (*Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_01e062d44865490c, []int{1}
}

func (m *Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Request.Unmarshal(m, b)
}
func (m *Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Request.Marshal(b, m, deterministic)
}
func (m *Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Request.Merge(m, src)
}
func (m *Request) XXX_Size() int {
	return xxx_messageInfo_Request.Size(m)
}
func (m *Request) XXX_DiscardUnknown() {
	xxx_messageInfo_Request.DiscardUnknown(m)
}

var xxx_messageInfo_Request proto.InternalMessageInfo

func (m *Request) GetTimestamp() *timestamp.Timestamp {
	if m != nil {
		return m.Timestamp
	}
	return nil
}

func (m *Request) GetPayload() string {
	if m != nil {
		return m.Payload
	}
	return ""
}

func (m *Request) GetReplicaId() uint64 {
	if m != nil {
		return m.ReplicaId
	}
	return 0
}

// <PRE-PREPARE, v, n, d>
// pre-prepare messages are used as proof that request was assigned sequence_number in view in view changes.
// For ordering requests.
type PrePrepare struct {
	View                 uint64   `protobuf:"varint,1,opt,name=view,proto3" json:"view,omitempty"`
	SequenceNumber       uint64   `protobuf:"varint,2,opt,name=sequence_number,json=sequenceNumber,proto3" json:"sequence_number,omitempty"`
	Digest               string   `protobuf:"bytes,4,opt,name=digest,proto3" json:"digest,omitempty"`
	ReplicaId            uint64   `protobuf:"varint,3,opt,name=replica_id,json=replicaId,proto3" json:"replica_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PrePrepare) Reset()         { *m = PrePrepare{} }
func (m *PrePrepare) String() string { return proto.CompactTextString(m) }
func (*PrePrepare) ProtoMessage()    {}
func (*PrePrepare) Descriptor() ([]byte, []int) {
	return fileDescriptor_01e062d44865490c, []int{2}
}

func (m *PrePrepare) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PrePrepare.Unmarshal(m, b)
}
func (m *PrePrepare) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PrePrepare.Marshal(b, m, deterministic)
}
func (m *PrePrepare) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PrePrepare.Merge(m, src)
}
func (m *PrePrepare) XXX_Size() int {
	return xxx_messageInfo_PrePrepare.Size(m)
}
func (m *PrePrepare) XXX_DiscardUnknown() {
	xxx_messageInfo_PrePrepare.DiscardUnknown(m)
}

var xxx_messageInfo_PrePrepare proto.InternalMessageInfo

func (m *PrePrepare) GetView() uint64 {
	if m != nil {
		return m.View
	}
	return 0
}

func (m *PrePrepare) GetSequenceNumber() uint64 {
	if m != nil {
		return m.SequenceNumber
	}
	return 0
}

func (m *PrePrepare) GetDigest() string {
	if m != nil {
		return m.Digest
	}
	return ""
}

func (m *PrePrepare) GetReplicaId() uint64 {
	if m != nil {
		return m.ReplicaId
	}
	return 0
}

// <PREPARE, v, n, d, i>
// For ordering requests.
type Prepare struct {
	View                 uint64   `protobuf:"varint,1,opt,name=view,proto3" json:"view,omitempty"`
	SequenceNumber       uint64   `protobuf:"varint,2,opt,name=sequence_number,json=sequenceNumber,proto3" json:"sequence_number,omitempty"`
	Digest               string   `protobuf:"bytes,4,opt,name=digest,proto3" json:"digest,omitempty"`
	ReplicaId            uint64   `protobuf:"varint,3,opt,name=replica_id,json=replicaId,proto3" json:"replica_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Prepare) Reset()         { *m = Prepare{} }
func (m *Prepare) String() string { return proto.CompactTextString(m) }
func (*Prepare) ProtoMessage()    {}
func (*Prepare) Descriptor() ([]byte, []int) {
	return fileDescriptor_01e062d44865490c, []int{3}
}

func (m *Prepare) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Prepare.Unmarshal(m, b)
}
func (m *Prepare) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Prepare.Marshal(b, m, deterministic)
}
func (m *Prepare) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Prepare.Merge(m, src)
}
func (m *Prepare) XXX_Size() int {
	return xxx_messageInfo_Prepare.Size(m)
}
func (m *Prepare) XXX_DiscardUnknown() {
	xxx_messageInfo_Prepare.DiscardUnknown(m)
}

var xxx_messageInfo_Prepare proto.InternalMessageInfo

func (m *Prepare) GetView() uint64 {
	if m != nil {
		return m.View
	}
	return 0
}

func (m *Prepare) GetSequenceNumber() uint64 {
	if m != nil {
		return m.SequenceNumber
	}
	return 0
}

func (m *Prepare) GetDigest() string {
	if m != nil {
		return m.Digest
	}
	return ""
}

func (m *Prepare) GetReplicaId() uint64 {
	if m != nil {
		return m.ReplicaId
	}
	return 0
}

// <COMMIT, v, n, D(m), i>
type Commit struct {
	View                 uint64   `protobuf:"varint,1,opt,name=view,proto3" json:"view,omitempty"`
	SequenceNumber       uint64   `protobuf:"varint,2,opt,name=sequence_number,json=sequenceNumber,proto3" json:"sequence_number,omitempty"`
	Digest               string   `protobuf:"bytes,4,opt,name=digest,proto3" json:"digest,omitempty"`
	ReplicaId            uint64   `protobuf:"varint,3,opt,name=replica_id,json=replicaId,proto3" json:"replica_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Commit) Reset()         { *m = Commit{} }
func (m *Commit) String() string { return proto.CompactTextString(m) }
func (*Commit) ProtoMessage()    {}
func (*Commit) Descriptor() ([]byte, []int) {
	return fileDescriptor_01e062d44865490c, []int{4}
}

func (m *Commit) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Commit.Unmarshal(m, b)
}
func (m *Commit) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Commit.Marshal(b, m, deterministic)
}
func (m *Commit) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Commit.Merge(m, src)
}
func (m *Commit) XXX_Size() int {
	return xxx_messageInfo_Commit.Size(m)
}
func (m *Commit) XXX_DiscardUnknown() {
	xxx_messageInfo_Commit.DiscardUnknown(m)
}

var xxx_messageInfo_Commit proto.InternalMessageInfo

func (m *Commit) GetView() uint64 {
	if m != nil {
		return m.View
	}
	return 0
}

func (m *Commit) GetSequenceNumber() uint64 {
	if m != nil {
		return m.SequenceNumber
	}
	return 0
}

func (m *Commit) GetDigest() string {
	if m != nil {
		return m.Digest
	}
	return ""
}

func (m *Commit) GetReplicaId() uint64 {
	if m != nil {
		return m.ReplicaId
	}
	return 0
}

// <CHECKPOINT, n, d, i>
// Generation periodically, when a request with a sequence number divisible by some constant is executed.
type Checkpoint struct {
	SequenceNumber       uint64   `protobuf:"varint,1,opt,name=sequence_number,json=sequenceNumber,proto3" json:"sequence_number,omitempty"`
	Id                   string   `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
	ReplicaId            uint64   `protobuf:"varint,2,opt,name=replica_id,json=replicaId,proto3" json:"replica_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Checkpoint) Reset()         { *m = Checkpoint{} }
func (m *Checkpoint) String() string { return proto.CompactTextString(m) }
func (*Checkpoint) ProtoMessage()    {}
func (*Checkpoint) Descriptor() ([]byte, []int) {
	return fileDescriptor_01e062d44865490c, []int{5}
}

func (m *Checkpoint) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Checkpoint.Unmarshal(m, b)
}
func (m *Checkpoint) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Checkpoint.Marshal(b, m, deterministic)
}
func (m *Checkpoint) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Checkpoint.Merge(m, src)
}
func (m *Checkpoint) XXX_Size() int {
	return xxx_messageInfo_Checkpoint.Size(m)
}
func (m *Checkpoint) XXX_DiscardUnknown() {
	xxx_messageInfo_Checkpoint.DiscardUnknown(m)
}

var xxx_messageInfo_Checkpoint proto.InternalMessageInfo

func (m *Checkpoint) GetSequenceNumber() uint64 {
	if m != nil {
		return m.SequenceNumber
	}
	return 0
}

func (m *Checkpoint) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Checkpoint) GetReplicaId() uint64 {
	if m != nil {
		return m.ReplicaId
	}
	return 0
}

//  <VIEW-CHANGE, v + 1, n, C, P, i>
// View changes are triggered by timeouts that prevent backups from waiting indefinitely for requests to execute.
type ViewChange struct {
	View                 uint64                      `protobuf:"varint,1,opt,name=view,proto3" json:"view,omitempty"`
	SequenceNumber       uint64                      `protobuf:"varint,2,opt,name=sequence_number,json=sequenceNumber,proto3" json:"sequence_number,omitempty"`
	Checkset             []*ViewChangeCheckpointLoad `protobuf:"bytes,4,rep,name=checkset,proto3" json:"checkset,omitempty"`
	Preprepset           []*ViewChangePrepLoad       `protobuf:"bytes,5,rep,name=preprepset,proto3" json:"preprepset,omitempty"`
	Prepset              []*ViewChangePrepLoad       `protobuf:"bytes,6,rep,name=prepset,proto3" json:"prepset,omitempty"`
	ReplicaId            uint64                      `protobuf:"varint,3,opt,name=replica_id,json=replicaId,proto3" json:"replica_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *ViewChange) Reset()         { *m = ViewChange{} }
func (m *ViewChange) String() string { return proto.CompactTextString(m) }
func (*ViewChange) ProtoMessage()    {}
func (*ViewChange) Descriptor() ([]byte, []int) {
	return fileDescriptor_01e062d44865490c, []int{6}
}

func (m *ViewChange) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ViewChange.Unmarshal(m, b)
}
func (m *ViewChange) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ViewChange.Marshal(b, m, deterministic)
}
func (m *ViewChange) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ViewChange.Merge(m, src)
}
func (m *ViewChange) XXX_Size() int {
	return xxx_messageInfo_ViewChange.Size(m)
}
func (m *ViewChange) XXX_DiscardUnknown() {
	xxx_messageInfo_ViewChange.DiscardUnknown(m)
}

var xxx_messageInfo_ViewChange proto.InternalMessageInfo

func (m *ViewChange) GetView() uint64 {
	if m != nil {
		return m.View
	}
	return 0
}

func (m *ViewChange) GetSequenceNumber() uint64 {
	if m != nil {
		return m.SequenceNumber
	}
	return 0
}

func (m *ViewChange) GetCheckset() []*ViewChangeCheckpointLoad {
	if m != nil {
		return m.Checkset
	}
	return nil
}

func (m *ViewChange) GetPreprepset() []*ViewChangePrepLoad {
	if m != nil {
		return m.Preprepset
	}
	return nil
}

func (m *ViewChange) GetPrepset() []*ViewChangePrepLoad {
	if m != nil {
		return m.Prepset
	}
	return nil
}

func (m *ViewChange) GetReplicaId() uint64 {
	if m != nil {
		return m.ReplicaId
	}
	return 0
}

type ViewChangeCheckpointLoad struct {
	SequenceNumber       uint64   `protobuf:"varint,1,opt,name=sequence_number,json=sequenceNumber,proto3" json:"sequence_number,omitempty"`
	Id                   string   `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ViewChangeCheckpointLoad) Reset()         { *m = ViewChangeCheckpointLoad{} }
func (m *ViewChangeCheckpointLoad) String() string { return proto.CompactTextString(m) }
func (*ViewChangeCheckpointLoad) ProtoMessage()    {}
func (*ViewChangeCheckpointLoad) Descriptor() ([]byte, []int) {
	return fileDescriptor_01e062d44865490c, []int{6, 0}
}

func (m *ViewChangeCheckpointLoad) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ViewChangeCheckpointLoad.Unmarshal(m, b)
}
func (m *ViewChangeCheckpointLoad) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ViewChangeCheckpointLoad.Marshal(b, m, deterministic)
}
func (m *ViewChangeCheckpointLoad) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ViewChangeCheckpointLoad.Merge(m, src)
}
func (m *ViewChangeCheckpointLoad) XXX_Size() int {
	return xxx_messageInfo_ViewChangeCheckpointLoad.Size(m)
}
func (m *ViewChangeCheckpointLoad) XXX_DiscardUnknown() {
	xxx_messageInfo_ViewChangeCheckpointLoad.DiscardUnknown(m)
}

var xxx_messageInfo_ViewChangeCheckpointLoad proto.InternalMessageInfo

func (m *ViewChangeCheckpointLoad) GetSequenceNumber() uint64 {
	if m != nil {
		return m.SequenceNumber
	}
	return 0
}

func (m *ViewChangeCheckpointLoad) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type ViewChangePrepLoad struct {
	View                 uint64   `protobuf:"varint,1,opt,name=view,proto3" json:"view,omitempty"`
	SequenceNumber       uint64   `protobuf:"varint,2,opt,name=sequence_number,json=sequenceNumber,proto3" json:"sequence_number,omitempty"`
	Digest               string   `protobuf:"bytes,4,opt,name=digest,proto3" json:"digest,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ViewChangePrepLoad) Reset()         { *m = ViewChangePrepLoad{} }
func (m *ViewChangePrepLoad) String() string { return proto.CompactTextString(m) }
func (*ViewChangePrepLoad) ProtoMessage()    {}
func (*ViewChangePrepLoad) Descriptor() ([]byte, []int) {
	return fileDescriptor_01e062d44865490c, []int{6, 1}
}

func (m *ViewChangePrepLoad) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ViewChangePrepLoad.Unmarshal(m, b)
}
func (m *ViewChangePrepLoad) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ViewChangePrepLoad.Marshal(b, m, deterministic)
}
func (m *ViewChangePrepLoad) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ViewChangePrepLoad.Merge(m, src)
}
func (m *ViewChangePrepLoad) XXX_Size() int {
	return xxx_messageInfo_ViewChangePrepLoad.Size(m)
}
func (m *ViewChangePrepLoad) XXX_DiscardUnknown() {
	xxx_messageInfo_ViewChangePrepLoad.DiscardUnknown(m)
}

var xxx_messageInfo_ViewChangePrepLoad proto.InternalMessageInfo

func (m *ViewChangePrepLoad) GetView() uint64 {
	if m != nil {
		return m.View
	}
	return 0
}

func (m *ViewChangePrepLoad) GetSequenceNumber() uint64 {
	if m != nil {
		return m.SequenceNumber
	}
	return 0
}

func (m *ViewChangePrepLoad) GetDigest() string {
	if m != nil {
		return m.Digest
	}
	return ""
}

// <NEW-VIEW, v + 1, V, O>
//  Ready all replicas! To view v + 1
type NewView struct {
	View      uint64        `protobuf:"varint,1,opt,name=view,proto3" json:"view,omitempty"`
	Viewchset []*ViewChange `protobuf:"bytes,2,rep,name=viewchset,proto3" json:"viewchset,omitempty"`
	// <sequence_number between min_s and max_s in viewchset, request digest of the pre-prep message>
	Prereqset            map[uint64]string `protobuf:"bytes,3,rep,name=prereqset,proto3" json:"prereqset,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	ReplicaId            uint64            `protobuf:"varint,4,opt,name=replica_id,json=replicaId,proto3" json:"replica_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *NewView) Reset()         { *m = NewView{} }
func (m *NewView) String() string { return proto.CompactTextString(m) }
func (*NewView) ProtoMessage()    {}
func (*NewView) Descriptor() ([]byte, []int) {
	return fileDescriptor_01e062d44865490c, []int{7}
}

func (m *NewView) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NewView.Unmarshal(m, b)
}
func (m *NewView) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NewView.Marshal(b, m, deterministic)
}
func (m *NewView) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NewView.Merge(m, src)
}
func (m *NewView) XXX_Size() int {
	return xxx_messageInfo_NewView.Size(m)
}
func (m *NewView) XXX_DiscardUnknown() {
	xxx_messageInfo_NewView.DiscardUnknown(m)
}

var xxx_messageInfo_NewView proto.InternalMessageInfo

func (m *NewView) GetView() uint64 {
	if m != nil {
		return m.View
	}
	return 0
}

func (m *NewView) GetViewchset() []*ViewChange {
	if m != nil {
		return m.Viewchset
	}
	return nil
}

func (m *NewView) GetPrereqset() map[uint64]string {
	if m != nil {
		return m.Prereqset
	}
	return nil
}

func (m *NewView) GetReplicaId() uint64 {
	if m != nil {
		return m.ReplicaId
	}
	return 0
}

// Result sent back to client after execution of request.
type Reply struct {
	Timestamp            *timestamp.Timestamp `protobuf:"bytes,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Payload              string               `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
	ReplicaId            uint64               `protobuf:"varint,3,opt,name=replica_id,json=replicaId,proto3" json:"replica_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Reply) Reset()         { *m = Reply{} }
func (m *Reply) String() string { return proto.CompactTextString(m) }
func (*Reply) ProtoMessage()    {}
func (*Reply) Descriptor() ([]byte, []int) {
	return fileDescriptor_01e062d44865490c, []int{8}
}

func (m *Reply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Reply.Unmarshal(m, b)
}
func (m *Reply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Reply.Marshal(b, m, deterministic)
}
func (m *Reply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Reply.Merge(m, src)
}
func (m *Reply) XXX_Size() int {
	return xxx_messageInfo_Reply.Size(m)
}
func (m *Reply) XXX_DiscardUnknown() {
	xxx_messageInfo_Reply.DiscardUnknown(m)
}

var xxx_messageInfo_Reply proto.InternalMessageInfo

func (m *Reply) GetTimestamp() *timestamp.Timestamp {
	if m != nil {
		return m.Timestamp
	}
	return nil
}

func (m *Reply) GetPayload() string {
	if m != nil {
		return m.Payload
	}
	return ""
}

func (m *Reply) GetReplicaId() uint64 {
	if m != nil {
		return m.ReplicaId
	}
	return 0
}

func init() {
	proto.RegisterType((*Message)(nil), "pbft.message")
	proto.RegisterType((*Request)(nil), "pbft.request")
	proto.RegisterType((*PrePrepare)(nil), "pbft.pre_prepare")
	proto.RegisterType((*Prepare)(nil), "pbft.prepare")
	proto.RegisterType((*Commit)(nil), "pbft.commit")
	proto.RegisterType((*Checkpoint)(nil), "pbft.checkpoint")
	proto.RegisterType((*ViewChange)(nil), "pbft.view_change")
	proto.RegisterType((*ViewChangeCheckpointLoad)(nil), "pbft.view_change.checkpointLoad")
	proto.RegisterType((*ViewChangePrepLoad)(nil), "pbft.view_change.prepLoad")
	proto.RegisterType((*NewView)(nil), "pbft.new_view")
	proto.RegisterMapType((map[uint64]string)(nil), "pbft.new_view.PrereqsetEntry")
	proto.RegisterType((*Reply)(nil), "pbft.reply")
}

func init() {
	proto.RegisterFile("pbft/pbft.proto", fileDescriptor_01e062d44865490c)
}

var fileDescriptor_01e062d44865490c = []byte{
	// 578 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xc4, 0x54, 0xdd, 0x6a, 0xdb, 0x4c,
	0x10, 0x8d, 0x64, 0xf9, 0x47, 0xe3, 0xef, 0x73, 0xd2, 0xa5, 0x14, 0x61, 0x08, 0x0d, 0xbe, 0x68,
	0x53, 0x0a, 0x32, 0xb8, 0xb9, 0x08, 0x69, 0xae, 0x5a, 0x0a, 0x09, 0x94, 0x12, 0x96, 0xd2, 0x5b,
	0x21, 0x4b, 0x13, 0x5b, 0xc4, 0x92, 0x36, 0x2b, 0x39, 0xc6, 0x25, 0xbd, 0xe8, 0x3b, 0xf5, 0x15,
	0xfa, 0x30, 0x7d, 0x8b, 0x32, 0x2b, 0xad, 0xfc, 0x0b, 0x86, 0x96, 0x62, 0x30, 0xd6, 0xce, 0xec,
	0x39, 0x3b, 0xb3, 0x67, 0x66, 0x07, 0x0e, 0xc5, 0xf0, 0x36, 0xef, 0xd3, 0x9f, 0x2b, 0x64, 0x9a,
	0xa7, 0xcc, 0xa2, 0x75, 0xf7, 0xf9, 0x28, 0x4d, 0x47, 0x13, 0xec, 0x2b, 0xdf, 0x70, 0x7a, 0xdb,
	0xcf, 0xa3, 0x18, 0xb3, 0xdc, 0x8f, 0x45, 0x01, 0xeb, 0xfd, 0x30, 0xa1, 0x19, 0x63, 0x96, 0xf9,
	0x23, 0x64, 0x67, 0xd0, 0x16, 0x12, 0x3d, 0x21, 0x51, 0xf8, 0x12, 0x1d, 0xe3, 0xc4, 0x38, 0x6d,
	0x0f, 0x9e, 0xb8, 0xe5, 0xa1, 0xd5, 0xc6, 0xd5, 0x01, 0x07, 0x21, 0xf1, 0xa6, 0xb0, 0xd8, 0x2b,
	0x68, 0x6a, 0x86, 0xa9, 0x18, 0xff, 0x57, 0x8c, 0x12, 0xad, 0xf7, 0xd9, 0x0b, 0x68, 0x04, 0x69,
	0x1c, 0x47, 0xb9, 0x53, 0x53, 0xc8, 0xff, 0x0a, 0x64, 0xe1, 0xbb, 0x3a, 0xe0, 0xe5, 0x2e, 0x1b,
	0x00, 0x04, 0x63, 0x0c, 0xee, 0x44, 0x1a, 0x25, 0xb9, 0x63, 0x29, 0xec, 0x51, 0x89, 0xad, 0xfc,
	0x94, 0xc6, 0xc2, 0xa2, 0xe4, 0x1f, 0x22, 0x9c, 0x79, 0xc1, 0xd8, 0x4f, 0x46, 0xe8, 0xd4, 0x97,
	0x93, 0x5f, 0xda, 0x20, 0x16, 0x99, 0xef, 0x95, 0xc5, 0x5e, 0x43, 0x2b, 0xc1, 0x99, 0x47, 0x1e,
	0xa7, 0xa1, 0x28, 0x9d, 0x82, 0xa2, 0xbd, 0x94, 0x7e, 0x82, 0xb3, 0x2f, 0x11, 0xce, 0xde, 0xd9,
	0xd0, 0x14, 0xfe, 0x7c, 0x92, 0xfa, 0x61, 0xef, 0x11, 0x9a, 0x12, 0xef, 0xa7, 0x98, 0xe5, 0xec,
	0x1c, 0xec, 0x4a, 0xd4, 0x52, 0xb3, 0xae, 0x5b, 0xc8, 0xee, 0x6a, 0xd9, 0xdd, 0xcf, 0x1a, 0xc1,
	0x17, 0x60, 0xe6, 0x54, 0xe7, 0x29, 0xe5, 0x6c, 0xae, 0x4d, 0x76, 0x0c, 0x20, 0x51, 0x4c, 0xa2,
	0xc0, 0xf7, 0xa2, 0x50, 0x89, 0x65, 0x71, 0xbb, 0xf4, 0x5c, 0x87, 0xbd, 0xef, 0xc6, 0x4a, 0xa5,
	0x18, 0x03, 0x4b, 0xdd, 0xc0, 0x50, 0x40, 0xb5, 0x66, 0x2f, 0xe1, 0x30, 0xa3, 0x0c, 0x93, 0x00,
	0xbd, 0x64, 0x1a, 0x0f, 0x51, 0xaa, 0x20, 0x16, 0xef, 0x68, 0xf7, 0x27, 0xe5, 0x65, 0xcf, 0xa0,
	0x11, 0x46, 0x23, 0xcc, 0x0a, 0xa1, 0x6d, 0x5e, 0x5a, 0xbb, 0x72, 0xf8, 0x56, 0x95, 0x7d, 0x2f,
	0xe1, 0x1f, 0x75, 0x2b, 0xed, 0x25, 0x7a, 0xb8, 0xdc, 0xa0, 0xdb, 0xa2, 0x19, 0x5b, 0xa3, 0x75,
	0xc0, 0x2c, 0x4f, 0xb3, 0xb9, 0x19, 0xad, 0x97, 0xd9, 0x5c, 0x8f, 0xf2, 0xb3, 0xb6, 0xd2, 0xd3,
	0x7f, 0x77, 0xd3, 0x4b, 0x68, 0xa9, 0x94, 0x33, 0xa4, 0xbb, 0xd6, 0x4e, 0xdb, 0x83, 0x93, 0x8d,
	0xc7, 0xb1, 0xf4, 0xba, 0x3e, 0xa6, 0x7e, 0xc8, 0x2b, 0x06, 0xbb, 0x00, 0x7a, 0xf2, 0xf4, 0x23,
	0x7e, 0x5d, 0xf1, 0xbb, 0x9b, 0x7c, 0x02, 0x28, 0xe6, 0x12, 0x9a, 0x9d, 0x15, 0x9d, 0x42, 0xc4,
	0xc6, 0x4e, 0xa2, 0x86, 0xee, 0xa8, 0x40, 0xf7, 0x1a, 0x3a, 0xab, 0xc9, 0xfe, 0x71, 0x15, 0xba,
	0x1e, 0xb4, 0x74, 0xf8, 0x7f, 0xd2, 0x4c, 0xbd, 0x5f, 0xc6, 0x62, 0xca, 0x6c, 0x8d, 0xd0, 0x07,
	0x9b, 0xbe, 0xc1, 0x98, 0x34, 0x32, 0x95, 0x46, 0x9b, 0x93, 0x8b, 0x2f, 0x30, 0xec, 0x2d, 0xd8,
	0x42, 0xa2, 0xc4, 0x7b, 0x22, 0xd4, 0x14, 0xe1, 0x78, 0x75, 0x6e, 0xb9, 0x37, 0x7a, 0xff, 0x43,
	0x92, 0xcb, 0x39, 0x5f, 0xe0, 0xd7, 0x94, 0xb5, 0xd6, 0x95, 0xbd, 0x84, 0xce, 0x2a, 0x97, 0x1d,
	0x41, 0xed, 0x0e, 0xe7, 0x65, 0xc6, 0xb4, 0x64, 0x4f, 0xa1, 0xfe, 0xe0, 0x4f, 0xa6, 0x58, 0xce,
	0xad, 0xc2, 0xb8, 0x30, 0xcf, 0x8d, 0xde, 0x57, 0xa8, 0xd3, 0x51, 0xf3, 0x3d, 0x8c, 0xc5, 0x61,
	0x43, 0x9d, 0xfb, 0xe6, 0x77, 0x00, 0x00, 0x00, 0xff, 0xff, 0x86, 0xc1, 0x97, 0x6c, 0x0c, 0x07,
	0x00, 0x00,
}
